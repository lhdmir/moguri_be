name: Java CI with Maven

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true && github.base_ref == 'main' && github.head_ref == 'develop'
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Deploy to remote server
        if: success()
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: /home/${{ secrets.REMOTE_USER }}/app
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY//\\n/$'\n'}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          scp -o StrictHostKeyChecking=no target/*.jar $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/app.jar
          
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
            # Graceful shutdown of existing application
            APP_PID=$(pgrep -f app.jar)
            if [ -n "$APP_PID" ]; then
              kill -15 $APP_PID
              # Wait for the process to terminate
              sleep 10
            fi
          
            # Start new application
            nohup java -jar $REMOTE_PATH/app.jar --spring.profiles.active=prod > $REMOTE_PATH/app.log 2>&1 &
          
            # Health check
            sleep 10
            if pgrep -f app.jar > /dev/null; then
              echo "Deployment succeeded."
            else
              echo "Deployment failed."
              exit 1
            fi
          EOF
     